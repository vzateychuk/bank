/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.52).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package vez.ccy.rest;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

@Validated
public interface CurrencyApi {

  @Operation(
      summary = "adds currency",
      description = "Adds currency/rate to the system",
      tags = {"currency"})
  @ApiResponses(
      value = {
        @ApiResponse(responseCode = "201",
                description = "created new currency or already exists",
                content = @Content(
                    mediaType = "application/json",
                    schema = @Schema(implementation = CurrencyRate.class))),
        @ApiResponse(responseCode = "400", description = "invalid input, object invalid")
      })
  @PostMapping(value = "/currency")
  ResponseEntity<CurrencyRate> addCurrency(
      @Parameter(in = ParameterIn.DEFAULT, description = "Currency/Rate to add", schema = @Schema())
          @Valid
          @RequestBody
      CurrencyRate body);

  @Operation(
      summary = "get currency details (rate asof date/time)",
      description = "Get currency rate asof date/time ",
      tags = {"currency"})
  @ApiResponses(
      value = {
        @ApiResponse(
            responseCode = "200",
            description = "currency rate asof date",
            content =
                @Content(
                    mediaType = "application/json",
                    schema = @Schema(implementation = CurrencyRate.class))),
        @ApiResponse(responseCode = "400", description = "input date/time incorrect"),
        @ApiResponse(responseCode = "404", description = "currency code not found")
      })
  @GetMapping(value = "/currency/{code}")
  ResponseEntity<CurrencyRate> getCurrencyRate(
      @Parameter(
              in = ParameterIn.PATH,
              description = "currency code",
              required = true,
              schema = @Schema())
          @PathVariable("code")
          String code);

}
